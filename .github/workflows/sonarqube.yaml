# name: SonarQube Scan

# on:
#   push:
#     branches:
#       - master


# jobs:
#   build:
#     name: sonar-scan
#     runs-on: self-hosted
#     permissions: read-all
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           ref: ${{ github.event.pull_request.head.ref }}
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - uses: sonarsource/sonarqube-scan-action@master
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

# name: Build
# on:
#   push:
#     branches:
#       - main # the name of your main branch
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   build:
#     name: Build
#     runs-on: windows-latest
#     steps:
#       - name: Set up JDK 17
#         uses: actions/setup-java@v1
#         with:
#           java-version: 1.17
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Cache SonarQube packages
#         uses: actions/cache@v1
#         with:
#           path: ~\.sonar\cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache SonarQube scanner
#         id: cache-sonar-scanner
#         uses: actions/cache@v1
#         with:
#           path: .\.sonar\scanner
#           key: ${{ runner.os }}-sonar-scanner
#           restore-keys: ${{ runner.os }}-sonar-scanner
#       - name: Install SonarQube scanner
#         if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
#         shell: powershell
#         run: |
#           New-Item -Path .\.sonar\scanner -ItemType Directory
#           dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
#       - name: Build and analyze
#         shell: powershell
#         run: |
#           .\.sonar\scanner\dotnet-sonarscanner begin /k:"example" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
#           dotnet build
#           .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

# name: Build

# on:
#   push:
#     branches:
#       - master


# jobs:
#   build:
#     name: Build
#     runs-on: windows-latest
#     permissions: read-all
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Set up JDK 17
#         uses: actions/setup-java@v1
#         with:
#           java-version: 17
#       - name: Cache SonarQube packages
#         uses: actions/cache@v1
#         with:
#           path: ~\.sonar\cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache SonarQube scanner
#         id: cache-sonar-scanner
#         uses: actions/cache@v1
#         with:
#           path: .\.sonar\scanner
#           key: ${{ runner.os }}-sonar-scanner
#           restore-keys: ${{ runner.os }}-sonar-scanner
#       - name: Install SonarQube scanner
#         if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
#         shell: powershell
#         run: |
#           New-Item -Path .\.sonar\scanner -ItemType Directory
#           dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
#       - name: Build and analyze
#         shell: powershell
#         run: |
#           .\.sonar\scanner\dotnet-sonarscanner begin /k:"EasyBuggyTesting" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
#           dotnet build
#           .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

name: Sonar Scan v2

on:
  push:
    branches:
      - master


jobs:
  build:
    name: Sonar Scan
    runs-on: ubuntu-latest
    permissions: read-all
    services:
      web:
        image: private
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        #  -Dsonar.login=SONAR_TOKEN sqp_346f04ce5d580575a7f3ff3dc878cad66ec1cb1c -Dsonar.projectKey=P-Aspen-Org_easybuggy_ed517a78-cd81-44db-95ab-0b0b16591a79 -Dsonar.projectName='easybuggy'